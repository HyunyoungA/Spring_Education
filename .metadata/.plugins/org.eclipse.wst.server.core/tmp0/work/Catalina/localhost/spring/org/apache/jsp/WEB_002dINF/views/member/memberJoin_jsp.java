/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-06-13 06:03:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberJoin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/member-style.css\" type=\"text/css\">\r\n");
      out.write("<style>\r\n");
      out.write("	span.guide{display: none; font-size: 12px; top: 12px; right: 10px;}\r\n");
      out.write("	span.ok{color: green;}\r\n");
      out.write("	span.error{color: red;}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/menubar.jsp", out, false);
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<h1 align=\"center\">회원가입</h1>\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"centerText\">\r\n");
      out.write("		<form action=\"minsert.me\" method=\"post\" id=\"joinForm\">\r\n");
      out.write("			<table>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>* 아이디</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"text\" name=\"id\" id=\"userId\">\r\n");
      out.write("						<span class=\"guide ok\">이 아이디는 사용 가능합니다.</span>\r\n");
      out.write("						<span class=\"guide error\">이 아이디는 사용할 수 없습니다.</span>\r\n");
      out.write("						<input type=\"hidden\" id=\"idDuplicateCheck\" value=\"0\"/>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>* 이름</th>\r\n");
      out.write("					<td><input type=\"text\" name=\"name\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>* 비밀번호</th>\r\n");
      out.write("					<td><input type=\"password\" name=\"pwd\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>* 비밀번호확인</th>\r\n");
      out.write("					<td><input type=\"password\" name=\"pwd2\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>* 닉네임</th>\r\n");
      out.write("					<td><input type=\"text\" name=\"nickName\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>성별</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"radio\" name=\"gender\" value=\"M\">남\r\n");
      out.write("						<input type=\"radio\" name=\"gender\" value=\"F\">여\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>나이</th>\r\n");
      out.write("					<td><input type=\"number\" min=\"20\" max=\"100\" name=\"age\"></td>				\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>이메일</th>\r\n");
      out.write("					<td><input type=\"email\" name=\"email\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>전화번호</th>\r\n");
      out.write("					<td><input type=\"tel\" name=\"phone\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>우편번호</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"text\" name=\"post\" class=\"postcodify_postcode5\" value=\"\" size=\"6\">\r\n");
      out.write("						<button type=\"button\" id=\"postcodify_search_button\">검색</button>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>도로명 주소</th>\r\n");
      out.write("					<td><input type=\"text\" name=\"address1\" class=\"postcodify_address\" value=\"\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>상세 주소</th>\r\n");
      out.write("					<td><input type=\"text\" name=\"address2\" class=\"postcodify_extra_info\" value=\"\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				\r\n");
      out.write("				<!-- jQuery와 Postcodify를 로딩한다. -->\r\n");
      out.write("				<script src=\"//d1p7wdleee1q2z.cloudfront.net/post/search.min.js\"></script>\r\n");
      out.write("				<script>\r\n");
      out.write("					// 검색 단추를 누르면 팝업 레이어가 열리도록 설정한다.\r\n");
      out.write("					$(function(){\r\n");
      out.write("						$(\"#postcodify_search_button\").postcodifyPopUp();\r\n");
      out.write("					});\r\n");
      out.write("				</script>\r\n");
      out.write("				\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=\"2\" align=\"center\">\r\n");
      out.write("						<button onclick=\"return validate();\">가입하기</button>\r\n");
      out.write("						<input type=\"reset\" value=\"취소하기\">\r\n");
      out.write("						<button type=\"button\" onclick=\"location.href='home.do'\">시작 페이지로 이동</button>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("	<script>\r\n");
      out.write("		$('#userId').on('keyup', function(){\r\n");
      out.write("			var userId = $(this).val().trim();\r\n");
      out.write("			\r\n");
      out.write("			if(userId.length < 4){\r\n");
      out.write("				$('.guide').hide();\r\n");
      out.write("				$('#idDuplicateCheck').val(0);\r\n");
      out.write("				//$('#idDuplicateCheck').val(0); 아이디 중복확인을 했는지에 대한 확인여부\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: 'dupId.me',\r\n");
      out.write("				data: {id:userId},\r\n");
      out.write("				success: function(data){\r\n");
      out.write("					console.log(data);\r\n");
      out.write("					//스트링값으로 넘어오고있다\r\n");
      out.write("					if(data == '1'){\r\n");
      out.write("						$('.guide.error').show();\r\n");
      out.write("						$('.guide.ok').hide();\r\n");
      out.write("						$('#idDuplicateCheck').val(0);\r\n");
      out.write("					} else {\r\n");
      out.write("						$('.guide.error').hide();\r\n");
      out.write("						$('.guide.ok').show();\r\n");
      out.write("						$('#idDuplicateCheck').val(1);\r\n");
      out.write("					}\r\n");
      out.write("				},\r\n");
      out.write("				error: function(data){\r\n");
      out.write("					console.log(data);\r\n");
      out.write("				}\r\n");
      out.write("			})\r\n");
      out.write("		});\r\n");
      out.write("						\r\n");
      out.write("		function validate(){\r\n");
      out.write("			if($('#idDuplicateCheck').val() == 0){\r\n");
      out.write("				alert('사용 가능한 아이디를 입력해주세요');\r\n");
      out.write("				$('#userId').focus();\r\n");
      out.write("				return false;\r\n");
      out.write("			} else {\r\n");
      out.write("				$('#joinForm').submit();\r\n");
      out.write("			}\r\n");
      out.write("		}			\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
